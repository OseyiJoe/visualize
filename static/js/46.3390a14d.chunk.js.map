{"version":3,"file":"static/js/46.3390a14d.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/InitLoader/Loader.module.css?3fe5","components/InitLoader/Loader.jsx","webpack://react-homework-template/./src/components/Pictures/Pictures.module.css?43dd","components/Pictures/Pictures.jsx","redux/Application/selectors.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"backDrop\":\"Loader_backDrop__2wtOz\",\"loader\":\"Loader_loader__KzDyR\"};","import { ThreeCircles } from 'react-loader-spinner';\nimport css from './Loader.module.css';\nimport { useSelector } from 'react-redux';\nimport { selectLoading } from '../../redux/Application/selectors';\n\nexport const Loader = () => {\n  const ifLoading = useSelector(selectLoading);\n\n  return (\n    <>\n      {ifLoading && (\n        <div className={css.backDrop}>\n          <ThreeCircles\n            visible={true}\n            height=\"80\"\n            width=\"80\"\n            color=\"blue\"\n            radius=\"9\"\n            ariaLabel=\"three-dots-loading\"\n            wrapperStyle={{}}\n            wrapperClass={css.loader}\n          />\n        </div>\n      )}\n    </>\n  );\n};\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"titleContainer\":\"Pictures_titleContainer__M+sIU\",\"image\":\"Pictures_image__i7a+m\",\"icon\":\"Pictures_icon__vCrGT\",\"rotateY\":\"Pictures_rotateY__t3yKA\",\"iconTwo\":\"Pictures_iconTwo__5cNVf\",\"rotateYTwo\":\"Pictures_rotateYTwo__7ZWyi\",\"movieGallery\":\"Pictures_movieGallery__FW4+y\",\"movieItem\":\"Pictures_movieItem__NxmRo\",\"movieGalleryLabel\":\"Pictures_movieGalleryLabel__hAQU2\",\"message\":\"Pictures_message__hHhfD\",\"galleryFrame\":\"Pictures_galleryFrame__4D5hE\",\"searchBar\":\"Pictures_searchBar__wN7iw\",\"form\":\"Pictures_form__S72IZ\",\"input\":\"Pictures_input__UKZtC\",\"button\":\"Pictures_button__tS4qB\",\"liker\":\"Pictures_liker__OaRa7\",\"buttonWrapper\":\"Pictures_buttonWrapper__kFvS0\",\"loadBtn\":\"Pictures_loadBtn__JUnJl\"};","import css from './Pictures.module.css';\nimport { Loader } from '../InitLoader/Loader';\nimport { useEffect } from 'react';\nimport imagePic from './photo.png';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport {\n  selectLoading,\n  selectSearchedImgWord,\n  selectSearchedImages,\n  selectPopularImages,\n} from '../../redux/Application/selectors';\nimport {\n  searchImages,\n  saveImages,\n  fetchImgWord,\n  searchMoreImages,\n} from '../../redux/Application/operations';\n\nexport const Pictures = () => {\n  const dispatch = useDispatch();\n  const searchedImages = useSelector(selectSearchedImages);\n  const searchedImgWord = useSelector(selectSearchedImgWord);\n  const ifLoading = useSelector(selectLoading);\n  const popularImages = useSelector(selectPopularImages);\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    evt.target.elements.button.style.boxShadow =\n      'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n    setTimeout(() => {\n      evt.target.elements.button.style.boxShadow = 'none';\n    }, 2000);\n    const form = evt.target;\n    dispatch(searchImages(form.elements.searcher.value));\n    dispatch(fetchImgWord(form.elements.searcher.value));\n    console.log(form.elements.searcher.value);\n  };\n\n  const handleButtonPress = (evt) => {\n    evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n\n    setTimeout(() => {\n      evt.target.style.boxShadow = 'none';\n    }, 2000);\n    dispatch(searchMoreImages(searchedImgWord));\n\n  }\n\n   const handlePress = (imageFiles, evt) => {\n     evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n\n     setTimeout(() => {\n       evt.target.style.boxShadow = 'none';\n     }, 2000);\n\n     console.log(imageFiles); // Log the array of video files\n\n     dispatch(saveImages({ image_files: imageFiles }));\n   };\n\n  useEffect(() => {\n    const lightbox = new SimpleLightbox('.gallery a', {\n      captionsData: 'alt',\n      captionDelay: 250,\n      closeText: 'X',\n      animationSlide: false,\n    });\n\n    // Cleanup function\n    return () => {\n      lightbox.destroy();\n    };\n  }, [searchedImages]);\n\n  /*useEffect(() => {\n    dispatch(fetchPopularImages());\n  }, [dispatch]); */\n\n  return (\n    <main>\n      <span className={css.titleContainer}>\n        <img\n          src={imagePic}\n          className={css.icon}\n          style={{ width: '100px' }}\n          alt=\"\"\n        />\n\n        <span>\n          <span className={css.movieGalleryLabel}>Pictures</span>\n        </span>\n\n        <img\n          src={imagePic}\n          className={css.iconTwo}\n          style={{ width: '100px' }}\n          alt=\"\"\n        />\n      </span>\n      <form className={css.form} onSubmit={handleSubmit}>\n        <input\n          className={css.input}\n          type=\"text\"\n          autoComplete=\"off\"\n          name=\"searcher\"\n          placeholder=\"Search for Pictures\"\n        />\n        <button type=\"submit\" name=\"button\" className={css.button}>\n          <span className={css.buttonLabel}>Search</span>\n        </button>\n      </form>\n      <div className={css.galleryFrame}>\n        <Loader />\n        {searchedImages.length !== 0 && searchedImgWord !== null ? (\n          <ul className={`${css.movieGallery} gallery`}>\n            {searchedImages.map(searchedImage => (\n              <li key={searchedImage.id} className={css.movieItem}>\n                <a href={searchedImage.src.landscape}>\n                  <img\n                    className={css.image}\n                    src={searchedImage.src.medium}\n                    alt={searchedImage.alt}\n                  />\n                </a>\n                <button\n                  className={css.liker}\n                  onClick={evt => handlePress(searchedImage, evt)}\n                >\n                  Save\n                </button>\n              </li>\n            ))}\n          </ul>\n        ) : searchedImages.length === 0 && searchedImgWord === null ? (\n          <ul className={`${css.movieGallery} gallery`}>\n            {popularImages.map(popularImage => (\n              <li key={popularImage.id} className={css.movieItem}>\n                <a href={popularImage.src.landscape}>\n                  <img\n                    className={css.image}\n                    src={popularImage.src.medium}\n                    alt={popularImage.alt}\n                  />\n                </a>\n                <button\n                  className={css.liker}\n                  onClick={evt => handlePress(popularImage, evt)}\n                >\n                  Save\n                </button>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          searchedImgWord !== null &&\n          ifLoading === false && (\n            <div className={css.message}>\n              <p className={css.messageItem}>\n                No Videos, try another search term or create API KEY if you\n                haven't.\n              </p>\n            </div>\n          )\n        )}\n      </div>\n      <div className={css.buttonWrapper}>\n        {searchedImages.length !== 0 ? (\n          <button onClick={handleButtonPress} className={css.loadBtn}>\n            Load More\n          </button>\n        ) : null}\n      </div>\n    </main>\n  );\n};\n\nexport default Pictures;\n\n","export const selectVotes = state => state.app.polls.items;\n\nexport const selectIsLoading = state => state.app.polls.ifLoading;\n\nexport const selectPopularVideos = state => state.app.popularVideos;\n\nexport const selectPopularImages = state => state.app.popularImages;\n\nexport const selectSearchedVideos = state => state.app.searchedVideos;\n\nexport const selectSearchedVideosNum = state => state.app.searchVidNmu;\n\nexport const selectSearchedImages = state => state.app.searchedImages;\n\nexport const selectSavedVideos = state => state.app.savedVideos;\n\nexport const selectSavedImages = state => state.app.savedImages;\n\nexport const selectSearchedVidWord = state => state.app.searchVidWord;\n\nexport const selectSearchedImgWord = state => state.app.searchImgWord;\n\nexport const selectMyKey = state => state.app.myKey;\n\nexport const selectMyKeyName = state => state.app.keyName;\n\nexport const selectMyKeyId = state => state.app.keyId;\n\nexport const selectLoading = state => state.app.ifLoading;\n\nexport const selectFullLoading = state => state.app.ifFullLoading;\n\nexport const selectOpenModal = state => state.app.openMyModal;\n\nexport const selectOpenKeyModal = state => state.app.openMyKeyModal;\n\n"],"names":["Loader","ifLoading","useSelector","selectLoading","_jsx","_Fragment","children","className","css","ThreeCircles","visible","height","width","color","radius","ariaLabel","wrapperStyle","wrapperClass","Pictures","dispatch","useDispatch","searchedImages","selectSearchedImages","searchedImgWord","selectSearchedImgWord","popularImages","selectPopularImages","handlePress","imageFiles","evt","target","style","boxShadow","setTimeout","console","log","saveImages","image_files","useEffect","lightbox","SimpleLightbox","captionsData","captionDelay","closeText","animationSlide","destroy","_jsxs","src","imagePic","alt","onSubmit","preventDefault","elements","button","form","searchImages","searcher","value","fetchImgWord","type","autoComplete","name","placeholder","length","map","searchedImage","href","landscape","medium","onClick","id","popularImage","searchMoreImages","selectPopularVideos","state","app","popularVideos","selectSearchedVideos","searchedVideos","selectSavedVideos","savedVideos","selectSavedImages","savedImages","selectSearchedVidWord","searchVidWord","searchImgWord","selectMyKey","myKey","selectMyKeyName","keyName","selectMyKeyId","keyId","selectFullLoading","ifFullLoading","selectOpenModal","openMyModal","selectOpenKeyModal","openMyKeyModal"],"sourceRoot":""}